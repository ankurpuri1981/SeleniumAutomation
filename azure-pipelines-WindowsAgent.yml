# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  #name: 'Default'
  #vmImage: 'ankurvmwindows'
  vmImage: 'Windows-latest'
strategy:
  matrix:
    Python39:
      python.version: '3.9'

steps:
  # For self hosted agents 
  #- task: UsePythonVersion@0               
  
    # inputs:
    #   versionSpec: '3.9'
    #   addToPath: true
    #   architecture: 'x64' # Options: x86, x64 (this argument applies only on Windows agents)
# For microsoft hosted agents
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
    
  - script:
      python -m pip install --upgrade pip
      pip install selenium
      pip install openpyxl
      pip install chromedriver
      pip install pytest pytest-azurepipelines
      pip install pytest-html
    
    displayName: 'Install dependencies'

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'ankurkpuri'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'sonar.SeleniumAutomation'
      cliProjectName: 'SeleniumAutomation'
      cliSources: '.'
      extraProperties: |
        # Additional properties that will be passed to the scanner, 
        # Put one key=value per line, example:
        # sonar.exclusions=**/*.bin
        sonar.python.coverage.reportPath=*.coverage.xml
  
  - bash: 'pytest --junitxml=$(Build.StagingDirectory)/test.xml' 
    workingDirectory: '.'
    displayName: 'Run tests with code coverage'
    continueOnError: true
 
  - task: PublishTestResults@2
    displayName: 'Publish test result /test.xml'
    inputs:
      testResultsFiles: '$(Build.StagingDirectory)/test.xml'
      testRunTitle: 010
 
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov'
      additionalCodeCoverageFiles: '$(System.DefaultWorkingDirectory)/**'
 
  - task: DeleteFiles@1
    displayName: 'Delete files from $(System.DefaultWorkingDirectory)/htmlcov'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/htmlcov'
      Contents: '**'
 
  - task: SonarCloudAnalyze@1
    displayName: 'Run Sonarcloud Analysis'

  - script: |
      pytest --html=report.html
    displayName: 'pytest'

  - task: WhiteSource Bolt@20
    inputs:
      cwd: 'SeleniumAutomation'
  
